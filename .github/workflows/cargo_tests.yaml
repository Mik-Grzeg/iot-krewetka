name: cargo_tests

on:
  workflow_call:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        app: ["collector", "processor", "reporting"]
    steps:
      - uses: actions/checkout@v3

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Cargo cache
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles(format('./{0}/Cargo.toml', matrix.app))}}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles(format('./{0}/Cargo.toml', matrix.app))}}
            ${{ runner.os }}-cargo

      - name: Target cache
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles(format('./{0}/Cargo.toml', matrix.app))}}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ hashFiles(format('./{0}/Cargo.toml', matrix.app))}}
            ${{ runner.os }}-cargo-target

      - name: Check
        working-directory: ${{ matrix.app }}
        run: |
          cargo check

      - name: Test
        working-directory: ${{ matrix.app }}
        run: |
          cargo test

      - name: Clippy
        working-directory: ${{ matrix.app }}
        run: |
          cargo clippy

      - name: Fmt
        working-directory: ${{ matrix.app }}
        run: |
          cargo fmt --check --all
